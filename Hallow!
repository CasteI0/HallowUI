--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.6) ~  Much Love, Ferib 

]]--

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==6) then v29=nil;function v29()local v31=0;local v32;local v33;local v34;local v35;local v36;local v37;local v38;local v39;while true do if (2==v31) then v36=nil;v37=nil;v31=10 -7 ;end if (1==v31) then v34=nil;v35=nil;v31=2;end if (v31==(1 + 2)) then v38=nil;v39=nil;v31=4;end if (v31==4) then while true do if ((1 + 0)~=v32) then else local v92=0 -0 ;while true do if (0==v92) then v35=nil;v36=nil;v92=1;end if (v92==1) then v32=2;break;end end end if (v32==(1335 -(353 + 979))) then v39=nil;while true do local v99=0 + 0 ;local v100;while true do if (v99==0) then v100=0;while true do if ((704 -(680 + 24))~=v100) then else local v105=0;while true do if (v105==(1 + 0)) then v100=1 + 0 ;break;end if (v105==(0 -0)) then if (v33==3) then local v111=0;while true do local v117=0 -0 ;while true do if (v117==(0 + 0)) then if (v111~=(1 + 0)) then else return v37;end if (v111==0) then local v137=0;while true do if (v137==1) then v111=1 + 0 ;break;end if (v137==0) then for v179=1 -0 ,v24() do v35[v179-1 ]=v29();end for v181=923 -(193 + 729) ,v24() do v36[v181]=v24();end v137=1;end end end break;end end end end if (v33~=(7 -5)) then else local v112=0 -0 ;local v113;local v114;while true do if (v112==(0 + 0)) then v113=1360 -(1270 + 90) ;v114=nil;v112=1389 -(246 + 1142) ;end if (v112==1) then while true do if (v113~=(88 -(84 + 4))) then else v114=0;while true do if (v114~=(572 -(273 + 298))) then else for v183=4 -3 ,v24() do local v184=0 + 0 ;local v185;local v186;local v187;while true do if (v184==(0 -0)) then v185=128 -(101 + 27) ;v186=nil;v184=1;end if (1~=v184) then else v187=nil;while true do if (v185~=(1053 -(635 + 418))) then else local v221=0;while true do if ((0 + 0)==v221) then v186=0;v187=nil;v221=1;end if (v221~=(3 -2)) then else v185=1 + 0 ;break;end end end if (v185==1) then while true do if (v186==(1529 -(1002 + 527))) then v187=v22();if (v21(v187,1,1865 -(49 + 1815) )==(0 + 0)) then local v235=0;local v236;local v237;local v238;local v239;local v240;local v241;while true do if ((1 + 1)~=v235) then else v240=nil;v241=nil;v235=593 -(538 + 52) ;end if (v235==3) then while true do if (1~=v236) then else local v248=0 + 0 ;while true do if (v248~=0) then else v239=nil;v240=nil;v248=1;end if (1==v248) then v236=2;break;end end end if (v236==0) then local v249=0;while true do if (v249==(0 -0)) then v237=0 -0 ;v238=nil;v249=1;end if (v249==(124 -(73 + 50))) then v236=1 + 0 ;break;end end end if (v236==(2 -0)) then v241=nil;while true do if (v237~=1) then else local v250=0 -0 ;while true do if (v250==(1 + 0)) then v237=2;break;end if (v250~=(0 + 0)) then else v240=nil;v241=nil;v250=1 + 0 ;end end end if (v237~=(2 + 0)) then else while true do if (v238==2) then local v252=1678 -(701 + 977) ;local v253;local v254;while true do if (v252==(827 -(426 + 400))) then while true do if (0==v253) then v254=0;while true do if (v254~=(1102 -(983 + 119))) then else if (v21(v240,1,1)==(3 -2)) then v241[2]=v39[v241[851 -(347 + 502) ]];end if (v21(v240,2,1197 -(383 + 812) )==(1 + 0)) then v241[1 + 2 ]=v39[v241[12 -9 ]];end v254=1 -0 ;end if (v254==1) then v238=3;break;end end break;end end break;end if (v252~=(0 + 0)) then else v253=0 + 0 ;v254=nil;v252=1;end end end if (v238==(632 -(81 + 548))) then if (v21(v240,3,3)==1) then v241[951 -(615 + 332) ]=v39[v241[170 -(96 + 70) ]];end v34[v183]=v241;break;end if (v238==(2 -1)) then local v256=0;while true do if (v256==(368 -(290 + 77))) then v238=2 + 0 ;break;end if (v256==0) then local v261=0;while true do if (v261~=(603 -(42 + 560))) then else v256=1;break;end if (v261~=(586 -(320 + 266))) then else v241={v23(),v23(),nil,nil};if (v239==0) then local v263=0 + 0 ;local v264;local v265;while true do if (v263==0) then v264=0;v265=nil;v263=1;end if (v263==1) then while true do if (v264~=(1746 -(1114 + 632))) then else v265=0 -0 ;while true do if (v265==0) then v241[4 -1 ]=v23();v241[2 + 2 ]=v23();break;end end break;end end break;end end elseif (v239==1) then v241[3 -0 ]=v24();elseif (v239==2) then v241[3]=v24() -((1731 -(543 + 1186))^16) ;elseif (v239~=3) then else local v272=0 -0 ;local v273;local v274;local v275;while true do if (v272==0) then v273=0 -0 ;v274=nil;v272=1;end if (v272~=1) then else v275=nil;while true do if (v273==(1 + 0)) then while true do if (0==v274) then v275=0 + 0 ;while true do if ((1554 -(1388 + 166))==v275) then v241[2 + 1 ]=v24() -((2 + 0)^(15 + 1)) ;v241[820 -(787 + 29) ]=v23();break;end end break;end end break;end if (v273==0) then local v278=1803 -(8 + 1795) ;while true do if (v278==(2 -1)) then v273=2 -1 ;break;end if (v278==(0 -0)) then v274=853 -(612 + 241) ;v275=nil;v278=1;end end end end break;end end end v261=517 -(361 + 155) ;end end end end end if (v238~=0) then else local v257=0;local v258;while true do if (v257~=(0 -0)) then else v258=0 + 0 ;while true do if ((0 -0)~=v258) then else local v262=0 -0 ;while true do if (v262==0) then v239=v21(v187,1 + 1 ,3 + 0 );v240=v21(v187,4,6);v262=2 -1 ;end if (v262~=(1 + 0)) then else v258=1;break;end end end if (v258==(4 -3)) then v238=1;break;end end break;end end end end break;end if (v237==(0 -0)) then local v251=0;while true do if (v251~=0) then else v238=0 -0 ;v239=nil;v251=1;end if (v251~=1) then else v237=1;break;end end end end break;end end break;end if (v235~=(884 -(514 + 369))) then else v238=nil;v239=nil;v235=4 -2 ;end if (v235~=0) then else v236=0;v237=nil;v235=1;end end end break;end end break;end end break;end end end v33=4 -1 ;break;end if (0==v114) then local v175=793 -(393 + 400) ;while true do if (v175~=1) then else v114=1;break;end if (0==v175) then for v200=1 -0 ,v38 do local v201=211 -(13 + 198) ;local v202;local v203;local v204;while true do if (v201==(1 + 0)) then v204=nil;while true do if (v202~=(0 + 0)) then else local v228=0 + 0 ;local v229;while true do if (v228==0) then v229=0;while true do if (v229~=0) then else local v246=0;local v247;while true do if (v246==(0 -0)) then v247=439 -(224 + 215) ;while true do if (v247==(1 -0)) then v229=1;break;end if (v247~=(1281 -(139 + 1142))) then else v203=v22();v204=nil;v247=1 + 0 ;end end break;end end end if (v229~=(1 + 0)) then else v202=1 + 0 ;break;end end break;end end end if (v202==(2 -1)) then if (v203==1) then v204=v22()~=(0 -0) ;elseif (v203==(80 -(15 + 63))) then v204=v25();elseif (v203==(2 + 1)) then v204=v26();end v39[v200]=v204;break;end end break;end if (v201~=(374 -(131 + 243))) then else local v222=0 -0 ;local v223;while true do if (v222==0) then v223=0;while true do if (1~=v223) then else v201=1 + 0 ;break;end if (v223==(1828 -(1781 + 47))) then v202=0 + 0 ;v203=nil;v223=2 -1 ;end end break;end end end end end v37[5 -2 ]=v22();v175=2 -1 ;end end end end break;end end break;end end end v105=1 -0 ;end end end if (v100==(1 + 0)) then if ((1 + 0)==v33) then local v106=39 -(23 + 16) ;local v107;while true do if (v106==(0 + 0)) then v107=0 -0 ;while true do if (v107==(898 -(214 + 683))) then v39={};v33=1 + 1 ;break;end if (v107==0) then local v118=0;while true do if (v118~=(3 -2)) then else v107=1;break;end if (v118==(212 -(36 + 176))) then v37={v34,v35,nil,v36};v38=v24();v118=1 + 0 ;end end end end break;end end end if (v33==0) then local v108=0;local v109;while true do if (v108~=(0 + 0)) then else v109=0 + 0 ;while true do if (v109~=(0 + 0)) then else local v119=0 + 0 ;local v120;while true do if (v119~=0) then else v120=0 + 0 ;while true do if (v120~=0) then else local v176=0;while true do if ((0 + 0)~=v176) then else v34={};v35={};v176=933 -(467 + 465) ;end if (v176==(1 + 0)) then v120=1;break;end end end if (v120==1) then v109=3 -2 ;break;end end break;end end end if (v109~=1) then else v36={};v33=1;break;end end break;end end end break;end end break;end end end break;end if (v32==0) then v33=0 + 0 ;v34=nil;v32=1;end if (v32==2) then local v93=0 -0 ;while true do if ((2 -1)~=v93) then else v32=3;break;end if (v93~=0) then else v37=nil;v38=nil;v93=1;end end end end break;end if (v31==(0 + 0)) then v32=1538 -(611 + 927) ;v33=nil;v31=1 + 0 ;end end end v30=nil;v18=7;end if (v18==3) then v24=nil;function v24()local v40,v41,v42,v43=v1(v16,v19,v19 + 1 + 2 );v19=v19 + (11 -7) ;return (v43 * (46388323 -29611107)) + (v42 * (66577 -(340 + 701))) + (v41 * (820 -564)) + v40 ;end v25=nil;v18=4;end if (v18==2) then function v22()local v44=0 + 0 + 0 ;local v45;while true do if ((569 -(548 + (1075 -(135 + 920))))==v44) then return v45;end if (v44==0) then v45=v1(v16,v19,v19);v19=v19 + 1 ;v44=881 -(50 + 830) ;end end end v23=nil;function v23()local v46,v47=v1(v16,v19,v19 + 2 );v19=v19 + 1 + 1 ;return (v47 * (1189 -(674 + 259))) + v46 ;end v18=3;end if (v18==1) then v21=nil;function v21(v48,v49,v50)if v50 then local v74=(v48/((92 -(68 + 22))^(v49-(227 -(163 + (94 -31))))))%((1037 -(720 + 315))^(((v50-(1 + 0)) -(v49-1)) + (2 -1))) ;return v74-(v74%(1 + 0)) ;else local v75=((4 -1) -(1 + 0))^(v49-(1 -0)) ;return (((v48%(v75 + v75))>=v75) and (1 + 0)) or (0 -0) ;end end v22=nil;v18=2;end if (v18==4) then function v25()local v51=v24();local v52=v24();local v53=3 -2 ;local v54=(v21(v52,1 -0 ,(1716 -(162 + 1380)) -(146 + 8) ) * ((7 -5)^(25 + 7))) + v51 ;local v55=v21(v52,55 -34 ,31);local v56=((v21(v52,6 + 17 + 9 )==(1481 -(440 + 1040))) and  -(3 -2)) or (1 + 0) ;if (v55==(0 -0)) then if (v54==((0 -0) -0)) then return v56 * ((2427 -1382) -(230 + 815)) ;else local v78=(0 + 0) -0 ;while true do if (v78==(1004 -(310 + 694))) then v55=2 -1 ;v53=1113 -(822 + 291) ;break;end end end elseif (v55==(2746 -(623 + 76))) then return ((v54==(0 + 0)) and (v56 * (((6343 -4564) -(431 + 1347))/(169 -((139 -110) + 140))))) or (v56 * NaN) ;end return v8(v56,v55-1023 ) * (v53 + (v54/((4 -2)^(1657 -((2251 -799) + 153))))) ;end v26=nil;function v26(v57)local v58=0 + 0 ;local v59;local v60;while true do if (v58==2) then v60={};for v79=1 + 0 , #v59 do v60[v79]=v2(v1(v3(v59,v79,v79)));end v58=1957 -(855 + 1099) ;end if (1==v58) then v59=v3(v16,v19,(v19 + v57) -(1419 -(478 + 940)) );v19=v19 + v57 ;v58=(2 + 1) -(1 + 0) ;end if (v58==(0 -0)) then v59=nil;if  not v57 then v57=v24();if (v57==(742 -(68 + 674))) then return "";end end v58=1 + 0 ;end if ((4 -1)==v58) then return v6(v60);end end end v18=5;end if (0==v18) then v19=1;v20=nil;v16=v4(v3(v16,5),"..",function(v61)if (v1(v61,2)==79) then local v76=0;while true do if (v76==0) then v20=v0(v3(v61,1,1));return "";end end else local v77=v2(v0(v61,16));if v20 then local v81=v5(v77,v20);v20=nil;return v81;else return v77;end end end);v18=1;end if (v18==7) then function v30(v62,v63,v64)local v65=v62[1];local v66=v62[2];local v67=v62[3];return function(...)local v68=0;local v69;local v70;local v71;local v72;local v73;while true do if (v68==1) then v71={...};v72=v12("#",...) -1 ;v68=2;end if (v68==2) then v73=nil;function v73()local v82=v65;local v83=v66;local v84=v67;local v85=v28;local v86={};local v87={};local v88={};for v94=0 + 0 ,v72 do if ((439<(6454 -2078)) and (v94>=v84)) then v86[v94-v84 ]=v71[v94 + (1590 -(1340 + 249)) ];else v88[v94]=v71[v94 + 1 + 0 ];end end local v89=(v72-v84) + 1 ;local v90;local v91;while true do local v95=0;local v96;local v97;while true do if ((v95==(654 -((154 -112) + 611))) or (4436==(3387 -(145 + 60)))) then while true do if (((4512 -(41 + 578))==(3914 -(6 + 15))) and (v96==0)) then v97=(0 -0) + (0 -0) ;while true do if (((127 -(20 + 106))==v97) or ((3873 -2313)<=222)) then if ((v91<=(46 -35)) or ((3738 + 863)<=(4126 -(77 + 351)))) then if (((3638 -(4 + 176 + 120))>(3889 -(56 + (2420 -1607)))) and (v91<=(11 -6))) then if ((v91<=(1 + 1)) or ((11018 -6681)<(7909 -5735))) then if ((4993>=(309 + 2496)) and (v91<=0)) then v88[v90[3 -1 ]]={};elseif ((v91>(1 + 0 + 0)) or (1737>(3541 -(1213 + 293)))) then v88[v90[6 -4 ]]();else v88[v90[1019 -(906 + 111) ]]=v88[v90[595 -(224 + 368) ]][v90[1607 -(63 + 595 + 945) ]];end elseif ((v91<=(7 -4)) or (3433<=(1903 -(296 + 227)))) then local v122=0;local v123;local v124;while true do if ((1==v122) or ((2382 -944)<((1779 -(408 + 997)) + 84 + 532))) then while true do if (((3717 -(166 + 215))==(5331 -(806 + 1189))) and (v123==(0 -0))) then v124=v90[3 -1 ];v88[v124]=v88[v124](v13(v88,v124 + (411 -(283 + 127)) ,v70));break;end end break;end if ((v122==(0 -0)) or ((2800 + 1622)>(18849 -14346))) then v123=0 + 0 ;v124=nil;v122=1 + 0 ;end end elseif ((v91==(4 + 0)) or (349>=(19062 -14496))) then local v140=0 + 0 ;local v141;local v142;local v143;while true do if (((4826 -(1276 + 549))>=2135) and (v140==(451 -(394 + 56)))) then v143=nil;while true do if (((0 + 0)==v141) or (4378<(2821 -(901 + 24)))) then local v205=(0 -0) + 0 ;while true do if ((v205==0) or ((4684 -3658)<=(1181 -(484 + 30)))) then v142=0 -0 ;v143=nil;v205=2 -1 ;end if (((4764 -(111 + 355))>=(45 + (1213 -(127 + 142)))) and ((1812 -(1040 + 771))==v205)) then v141=344 -(218 + 125) ;break;end end end if ((v141==1) or ((5035 -3955)>=(899 + 1696))) then while true do if ((4695>760) and (v142==(838 -(827 + 11)))) then v143=v90[2 -0 ];v88[v143](v13(v88,v143 + 1 ,v90[10 -7 ]));break;end end break;end end break;end if ((v140==0) or (2645<=2545)) then v141=(2404 -(84 + 342)) -((4588 -3317) + 707) ;v142=nil;v140=1 + 0 ;end end else for v173=v90[4 -2 ],v90[(120 -(87 + 28)) -2 ] do v88[v173]=nil;end end elseif (((456 + 1216 + 593)<=3914) and (v91<=(1468 -(1309 + 151)))) then if (((1509 + 1314)<(2090 + 1777)) and (v91<=(13 -7))) then v88[v90[(9 -7) + 0 ]]=v88[v90[1141 -(58 + 1080) ]];elseif (((4951 -(48 + 9))>(930 + 916)) and (v91==(3 + 4))) then v88[v90[(1637 + 133) -(361 + 1407) ]]=v90[1385 -(957 + 425) ]~=(0 -0) ;elseif ((v90[5 -3 ]==v88[v90[637 -(149 + 484) ]]) or ((2118 -(834 + 273))>=(8435 -4227))) then v69=v69 + (404 -(375 + 28)) ;else v69=v90[1071 -(636 + 432) ];end elseif (((3762 -2154)==(3817 -2209)) and (v91<=(3 + 6))) then do return;end elseif ((((2909 + 394) -(27 + 1229))>(119 + 1022)) and (v91>(5 + 5))) then local v145=0 + 0 ;local v146;local v147;while true do if ((v145==(1 + 0)) or ((21365 -16745)==(3366 -2297))) then while true do if (((4840 -(491 + 245))>(11106 -7598)) and (v146==(1244 -(517 + 727)))) then v147=v90[768 -(124 + 642) ];v88[v147]=v88[v147]();break;end end break;end if (((71 + 1486 + 590)<=(894 + 3556)) and (v145==(0 + 0))) then v146=1530 -(798 + 732) ;v147=nil;v145=1848 -(1077 + 770) ;end end else v88[v90[737 -(707 + 28) ]]=v30(v83[v90[451 -(132 + 316) ]],nil,v64);end elseif (((1077 + 3581)==(7894 -3236)) and (v91<=(6 + 11))) then if ((v91<=14) or (1463>(6366 -((3154 -(361 + 1296)) + 378)))) then if ((3846>(4464 -2633)) and (v91<=(54 -42))) then local v127=1209 -(302 + 907) ;local v128;local v129;local v130;local v131;while true do if ((v127==(65 -(8 + 57))) or ((2972 -(803 + 1043))>(3276 + 584))) then v128=0 + 0 ;v129=nil;v127=1;end if ((v127==(1602 -(690 + 910))) or ((7446 -4800)>(14320 -10772))) then while true do if ((v128==(0 -0)) or ((12004 -(19157 -11604))>=(4480 + 60))) then v129=v90[1 + 1 ];v130=v88[v129];v128=1;end if ((3548>(848 + 1603)) and (v128==(2 -1))) then v131=v90[3];for v197=1,v131 do v130[v197]=v88[v129 + v197 ];end break;end end break;end if ((v127==(717 -((77 -13) + 652))) or ((6341 -(182 + 1504))<=(11548 -7276))) then v130=nil;v131=nil;v127=2;end end elseif (((432 + 294)<(3307 -2391)) and (v91==13)) then local v149=1109 -(959 + 150) ;local v150;while true do if (((4025 -(42 + 212))<(9796 -(3926 + 939))) and ((0 -0)==v149)) then v150=v90[869 -(170 + 697) ];v88[v150](v88[v150 + 1 + 0 ]);break;end end elseif (((6037 -((643 -(322 + 155)) + (3090 -(1421 + 5))))>=((2345 + 2899) -2694)) and (v88[v90[1 + (179 -(36 + 142)) ]]==v90[(1329 -(6 + 1319)) + 0 + 0 ])) then v69=v69 + 1 + 0 ;else v69=v90[290 -(118 + 169) ];end elseif ((v91<=(38 -(16 + 7))) or (2938<=(2256 -(333 + 938)))) then v88[v90[2 + 0 ]]=v64[v90[78 -(35 + 40) ]];elseif ((v91==16) or ((4389 -(49 + 557))<=(76 + 455))) then v88[v90[5 -3 ]]=v90[2 + 1 ];else local v153=0;local v154;local v155;local v156;local v157;local v158;while true do if (((262 + 2139 + 2212)>(3094 -(163 + 283))) and (v153==(0 -0))) then v154=0 -0 ;v155=nil;v153=1 -0 ;end if (((1542 + 136)==1678) and (v153==(1 + 0))) then v156=nil;v157=nil;v153=292 -(178 + 112) ;end if ((((8898 -3365) -((1289 -792) + 1010))==((6359 -(264 + 1360)) -(75 + 634))) and (v153==2)) then v158=nil;while true do if (((979 + 396)>(30 + 416)) and (v154==(0 -0))) then local v208=0;while true do if (((2929 -(538 + 156))>1871) and (v208==1)) then v154=1;break;end if ((((1312 + 2130) -(30 + 680))<=4290) and (v208==(1636 -(48 + (2476 -888))))) then v155=v90[(4 -1) -1 ];v156,v157=v85(v88[v155](v13(v88,v155 + (1202 -(101 + 1100)) ,v90[3 + (1756 -(1651 + 105)) ])));v208=1 + 0 ;end end end if (((4 -3)==v154) or ((3623 -1444)>=(10411 -6096))) then local v209=1095 -((1878 -929) + (933 -(102 + 685))) ;while true do if (((1731 -(892 + 839))==v209) or ((558 + 1325)>(4064 -(301 + 1124)))) then v70=(v157 + v155) -1 ;v158=0;v209=1 -0 ;end if ((v209==1) or (3677>=(4148 + 81 + 666))) then v154=3 -1 ;break;end end end if (((3234 + 1370)>=(2 + 1 + 808)) and ((1 + 1)==v154)) then for v218=v155,v70 do local v219=0 + 0 ;local v220;while true do if ((2973<(5880 -(942 + (1025 -(524 + 428))))) and (v219==(0 + 0))) then v220=0 + 0 ;while true do if ((1558<3798) and ((0 + 0)==v220)) then v158=v158 + (1657 -(246 + 1410)) ;v88[v218]=v156[v158];break;end end break;end end end break;end end break;end end end elseif ((v91<=((1714 -(1585 + 124)) + 15)) or ((2131 -(209 + 974))>(3981 -(2 + 20 + 1572)))) then if (((537 + 54)==((12784 -10064) -2129)) and (v91<=(25 -7))) then v69=v90[2 + (1031 -(756 + 274)) ];elseif (((3983 -(13 + 258))>=(3553 -634)) and (v91==(55 -36))) then v88[v90[924 -(123 + 799) ]][v90[1198 -(281 + 914) ]]=v88[v90[554 -(469 + 81) ]];else local v161=169 -(162 + 7) ;local v162;local v163;while true do if ((((16898 -(456 + 196)) -12152)==4094) and (v161==((0 -0) + 0))) then local v189=(348 -(171 + 177)) + 0 + 0 ;while true do if ((v189==(0 -0)) or (173>=(14271 -10692))) then v162=0;v163=nil;v189=1 + 0 ;end if (((2 -1)==v189) or ((4517 -(180 + 2736))==2923)) then v161=1 + 0 ;break;end end end if (((1410 + 2414)<(3211 + 800)) and (v161==((35 + 944) -(627 + 22 + 329)))) then while true do if ((v162==0) or ((1938 + 1118)>(32 + 3252))) then v163=v90[1 + 1 ];v88[v163]=v88[v163](v13(v88,v163 + (2 -1) ,v90[1880 -(1382 + 495) ]));break;end end break;end end end elseif ((v91<=(99 -78)) or ((294 + (8314 -4718))==(4784 -(18 + 58)))) then v88[v90[2]][v90[3]]=v90[11 -7 ];elseif (((93 + 147)<3761) and (v91>22)) then local v164=0 -0 ;local v165;local v166;local v167;local v168;while true do if (((880 + 170)<((7550 + 4328) -8673)) and (v164==2)) then while true do if (((1256 -(66 + 361))<(9662 -5458)) and (v165==(2 -1))) then v168=nil;while true do if (((1587 -(202 + 1384))==v166) or ((4210 -(540 + 710))>((6523 -(46 + 1029)) -(824 + 1148)))) then for v227=v167 + (588 -(111 + 218 + 258)) ,v90[4 -1 ] do v7(v168,v88[v227]);end break;end if ((1352<(15808 -10822)) and (v166==(474 -(445 + 29)))) then local v226=0 + 0 ;while true do if (((11445 -6482)==(4320 + 643)) and ((1 + 0)==v226)) then v166=1 + 0 ;break;end if ((v226==(0 + 0)) or ((2965 -(98 + 61))<=(5654 -2886))) then local v231=32 -(11 + 21) ;while true do if ((v231==((0 -0) -0)) or (3825>=(9458 -5416))) then v167=v90[1 + 1 ];v168=v88[v167];v231=1;end if ((v231==(167 -(157 + 9))) or ((2034 + 1379)==(1418 + 817))) then v226=1 + 0 ;break;end end end end end end break;end if ((495<=(12857 -8279)) and (v165==(0 -0))) then local v212=0 -(0 -0) ;while true do if (((0 + 0)==v212) or ((250 -122)>=(6731 -4362))) then v166=0;v167=nil;v212=1;end if ((v212==(1896 -(1529 + 366))) or ((54 + 97 + 578)>=(2683 + 323))) then v165=1 + 0 ;break;end end end end break;end if (((12545 -9712)>1049) and (v164==(1501 -(634 + 867)))) then v165=0;v166=nil;v164=1 + 0 ;end if (((960 + 383)==(2512 -(522 + 647))) and (v164==(1 + 0))) then v167=nil;v168=nil;v164=2;end end else local v169=382 -(215 + 27 + 140) ;local v170;local v171;local v172;while true do if (((5079 -(99 + 1043))>=((1685 -(1268 + 150)) -143)) and (v169==(273 -((625 -437) + 84)))) then v172=nil;while true do if ((v170==1) or ((4859 -((562 -348) + 117))==(4767 -(36 + 1011)))) then v88[v171 + 1 ]=v172;v88[v171]=v172[v90[1 + 3 ]];break;end if (((3759 -((1294 -(222 + 916)) + 102))>(754 + 595)) and (v170==0)) then local v216=0;local v217;while true do if ((3682>=1599) and (v216==(1038 -(702 + 336)))) then v217=0 + 0 ;while true do if (((9552 -5433)>=117) and (v217==(644 -(247 + 396)))) then v170=834 -(34 + 799) ;break;end if (((2033 + 266)>=1657) and (v217==(0 + 0))) then local v232=0 + (0 -0) ;while true do if ((v232==(1265 -(141 + 829 + 295))) or ((729 + 162)>=(4072 + 342))) then v171=v90[2];v172=v88[v90[1 + 2 ]];v232=1 + 0 ;end if (((1673 + 122 + 368)>(1064 -644)) and (v232==(1046 -(400 + 645)))) then v217=1;break;end end end end break;end end end end break;end if ((v169==(0 + 0)) or ((1601 + 3337)<=(2620 -1009))) then local v190=(22 + 138) -(140 + 20) ;while true do if ((v190==(0 -(0 + 0))) or ((1096 + 1539)==(8825 -5876))) then v170=0 -(0 -0) ;v171=nil;v190=1 + 0 + 0 ;end if ((v190==(1 + 0)) or ((449 + 29)>(5050 -1843))) then v169=(164 + 434) -(566 + 31) ;break;end end end end end v69=v69 + 1 + 0 ;break;end if ((v97==(582 -(467 + 115))) or ((4214 -(1079 + 186))<21)) then local v110=0 -0 ;while true do if (((4541 -((2051 -(253 + 848)) + 596))==(2101 + 894)) and (v110==(0 -0))) then v90=v82[v69];v91=v90[1 + 0 ];v110=1 + 0 ;end if ((v110==(992 -((1696 -(1282 + 355)) + (2161 -(93 + 1136))))) or ((5795 -(857 + 403))>=(3629 + 996))) then v97=(6 -4) -1 ;break;end end end end break;end end break;end if ((v95==(0 + 0 + 0)) or ((318 + 3997)<=(2382 -(1521 + 358)))) then v96=0 + 0 ;v97=nil;v95=1 + 0 ;end end end end v68=3;end if (v68==0) then v69=1;v70= -1;v68=1;end if (v68==3) then A,B=v28(v11(v73));if  not A[1] then local v98=v62[4][v69] or "?" ;error("Script error at ["   .. v98   .. "]:"   .. A[2] );else return v13(A,2,B);end break;end end end;end return v30(v29(),{},v17)(...);end if (v18==5) then v27=v24;v28=nil;function v28(...)return {...},v12("#",...);end v18=6;end end end vv9(),...);end
