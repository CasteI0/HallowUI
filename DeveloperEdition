--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.6) ~  Much Love, Ferib 

]]--

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (2==v18) then function v23()local v31,v32=v1(v16,v19,v19 + 2 );v19=v19 + 2 + 0 ;return (v32 * (206 + 50)) + v31 ;end v24=nil;function v24()local v33,v34,v35,v36=v1(v16,v19,v19 + (807 -(447 + (1163 -(51 + 755)))) );v19=v19 + 4 ;return (v36 * (16778333 -(32 + 1085))) + (v35 * (106298 -40762)) + (v34 * (1028 -772)) + v33 ;end v25=nil;v18=3;end if (v18==1) then function v21(v37,v38,v39)if v39 then local v72=(v37/((2 + 0)^(v38-(1 + 0))))%((2 + 0)^(((v39-(1 + (0 -0))) -(v38-1)) + ((697 + 322) -(617 + 401)))) ;return v72-(v72%(1 + 0)) ;else local v73=532 -(484 + 48) ;local v74;while true do if ((582 -(301 + (781 -500)))==v73) then v74=(741 -(697 + 42))^(v38-(1 + 0)) ;return (((v37%(v74 + v74))>=v74) and (1 + 0 + (928 -(516 + 412)))) or (752 -(569 + 183)) ;end end end end v22=nil;function v22()local v40=v1(v16,v19,v19);v19=v19 + 1 ;return v40;end v23=nil;v18=2;end if (v18==5) then v30=nil;function v30(v41,v42,v43)local v44=v41[1];local v45=v41[2];local v46=v41[3];return function(...)local v64=1;local v65= -1;local v66={...};local v67=v12("#",...) -1 ;local function v68()local v75=v44;local v76=v45;local v77=v46;local v78=v28;local v79={};local v80={};local v81={};for v86=0 + 0 ,v67 do if ((v86>=v77) or (4874<=(2856 -(341 + 694)))) then v79[v86-v77 ]=v66[v86 + 1 ];else v81[v86]=v66[v86 + 1 + (1649 -(1115 + 534)) ];end end local v82=(v67-v77) + (3 -2) ;local v83;local v84;while true do local v87=0;while true do if (((972 -(765 + 207))==v87) or (4002>(4277 -(37 + 43)))) then v83=v75[v64];v84=v83[780 -(653 + 126) ];v87=(2430 -(477 + 125)) -(1082 + 745) ;end if (((354 + 2486)==(3423 -(389 + 194))) and (v87==(1 + 0))) then if ((v84<=(36 -25)) or ((2763 -(100 + 915))<(930 -(394 + 298)))) then if (((8435 -6023)<(5334 -(20 + 1976))) and (v84<=5)) then if ((v84<=(1 + 1)) or ((1084 -(167 + 561))>(5492 -(326 + 348)))) then if (((835 -510)<(3440 -1114)) and (v84<=(0 + 0))) then v81[v83[1751 -(1550 + 199) ]]=v83[2 + 1 ];elseif (((5841 -(991 + 50 + 403))>((476 -198) + 289)) and (v84==(281 -(212 + 68)))) then v81[v83[2]]();else do return;end end elseif ((v84<=3) or ((201 + 586)>=(7373 -4437))) then local v115=(0 + 0) -0 ;local v116;local v117;local v118;while true do if (((4489 -(37 + 1285))>=(2655 + 232)) and (v115==(0 -0))) then v116=0 -0 ;v117=nil;v115=1 + 0 ;end if ((v115==(1618 -(1159 + 458))) or (4249<=((11544 -5905) -3125))) then v118=nil;while true do if (((5159 -(647 + 637))>(1314 -(537 + 70))) and (v116==1)) then for v200=v117 + (858 -(739 + 118)) ,v83[1068 -(393 + (2397 -(27 + 1698))) ] do v7(v118,v81[v200]);end break;end if (((16 + (1824 -(1736 + 19)))<(3463 -(701 + 393))) and (v116==(0 + 0))) then local v190=1071 -(743 + 328) ;while true do if (((5998 -(659 + 442))==(5842 -(393 + 552))) and ((1253 -(13 + 1240))==v190)) then v117=v83[2];v118=v81[v117];v190=1273 -(520 + 752) ;end if ((v190==((2750 -2054) -((485 -(9 + 4)) + 223))) or ((3634 -(44 + 125 + 46))>=4135)) then v116=1858 -(401 + 1456) ;break;end end end end break;end end elseif ((v84==(15 -11)) or ((448 -(32 + 63))>=((365 + 4624) -2284))) then for v174=v83[2 -(0 + 0) ],v83[3] do v81[v174]=nil;end else v81[v83[1 + 1 ]]={};end elseif (((1652 + 749)<(1475 + 1730)) and (v84<=(2 + 5 + 1))) then if (((3777 -898)>(3668 -1149)) and (v84<=(21 -15))) then v81[v83[1389 -(1205 + 182) ]]=v83[(440 -(269 + 166)) -2 ]~=(1170 -(491 + 679)) ;elseif (((26 + 184)<(12847 -9767)) and (v84==(8 -1))) then local v134=(0 -0) + 0 ;local v135;local v136;local v137;local v138;while true do if (((2285 -1632)>(484 + 121)) and (v134==(0 + 0))) then local v179=0 -0 ;while true do if ((((572 -(325 + 246)) -0)==v179) or (2027<(114 + 741 + 285))) then v134=(2 + 0) -1 ;break;end if (((1896 + 228)>(553 + 208)) and (v179==0)) then v135=0 -(0 -0) ;v136=nil;v179=3 -2 ;end end end if (((1 + 0)==v134) or ((4521 -(1243 + 29))>=(1806 + (4176 -2704)))) then local v180=0 -(0 -0) ;while true do if (((1 + 0)==v180) or ((4568 -(289 + 203))<2376)) then v134=2 + 0 ;break;end if (((9346 -6189)==(4230 -(231 + 5 + 837))) and ((0 -0)==v180)) then v137=nil;v138=nil;v180=(6 -4) -1 ;end end end if ((v134==(1 + 1)) or (47>(3736 -((2274 -1205) + 49)))) then while true do if (((1725 -(778 + 356))<(219 + 1335 + 29)) and (v135==(0 -0))) then local v201=1992 -(235 + 1757) ;while true do if ((2308==(3084 -776)) and (v201==(0 -0))) then local v219=381 -(145 + 236) ;while true do if ((1379<=2424) and (1==v219)) then v201=684 -(492 + 191) ;break;end if ((v219==(370 -(211 + 159))) or ((733 + 1925)<=(391 + (401 -131)))) then v136=v83[1155 -(964 + 189) ];v137=v81[v136];v219=1 + 0 ;end end end if (((3897 -2517)<=(20778 -16014)) and (v201==(1 -0))) then v135=1 + 0 ;break;end end end if (((1971 + 942)==((12166 -(1397 + 254)) -7602)) and (v135==((1328 -(760 + 567)) + 0))) then v138=v83[1245 -(707 + 535) ];for v211=3 -2 ,v138 do v137[v211]=v81[v136 + v211 ];end break;end end break;end end else v81[v83[2 -0 ]]=v30(v76[v83[11 -(4 + 4) ]],nil,v43);end elseif ((v84<=9) or ((9236 -4951)==(1075 -276))) then local v120=0 + 0 ;local v121;local v122;local v123;while true do if (((601 + 422)<=(635 + 3130)) and ((0 + 0)==v120)) then v121=1359 -(1033 + 326) ;v122=nil;v120=3 -(2 -0) ;end if ((v120==1) or ((1965 -(1423 + 212))>=(17862 -13265))) then v123=nil;while true do if (((5931 -(896 + 916))>((6240 -(118 + 378)) -4100)) and (v121==0)) then v122=902 -(323 + 579) ;v123=nil;v121=1;end if (((2049 + 906 + 151)==(2007 + 1099)) and (v121==((2 + 0) -(167 -(146 + 20))))) then while true do if ((v122==(0 + 0)) or ((789 -351)>3758)) then v123=v83[2 -0 ];v81[v123](v13(v81,v123 + 1 ,v83[(12 -7) -(1 + 1) ]));break;end end break;end end break;end end elseif ((v84>(37 -(12 + 15))) or (((2275 + 194) -((2431 -1202) + 657))>3238)) then local v140=0 -0 ;local v141;local v142;local v143;while true do if ((v140==(0 + 0 + 0)) or ((8 + 25)>=(6148 -(508 + 742)))) then v141=0 + 0 ;v142=nil;v140=1;end if ((v140==(758 -(637 + 120))) or ((3419 -(23 + 1 + 1022 + 44))<(157 + 29))) then v143=nil;while true do if ((v141==(0 -0)) or (1703<=242)) then local v203=0;while true do if ((3743>(3599 -(449 + 497))) and (v203==(1 + 0))) then v141=1536 -(159 + 1376) ;break;end if (((2331 + 869)>=(251 + (2316 -(999 + 933)))) and ((1623 -((2786 -1708) + 545))==v203)) then v142=0;v143=nil;v203=2 -1 ;end end end if ((v141==(1 + 0)) or (3699==(4024 -2526))) then while true do if ((v142==((0 -0) + 0)) or ((4752 + 197)<=1273)) then v143=v83[1 + 0 + 1 ];v81[v143]=v81[v143](v13(v81,v143 + (1695 -(588 + 1106)) ,v83[1353 -(1032 + 318) ]));break;end end break;end end break;end end else local v144=0;local v145;local v146;while true do if ((v144==(0 + 0)) or ((20391 -16047)==2129)) then local v181=270 -((144 -36) + 162) ;while true do if ((v181==(0 -0)) or ((8989 -4799)<(5717 -3333))) then v145=v83[1 + 1 ];v146=v81[v83[1 + 2 ]];v181=1;end if ((v181==(1 + 0)) or ((2988 -1851)<(153 + 193))) then v144=960 -((1120 -(199 + 123)) + 161) ;break;end end end if ((v144==(1 + 0)) or ((7318 -4461)>((8690 -(866 + 283)) -4433))) then v81[v145 + 1 ]=v146;v81[v145]=v146[v83[2 + 2 ]];break;end end end elseif (((796 -573)<(659 + 667)) and (v84<=((3567 -(1330 + 277)) -(853 + (1521 -431))))) then if ((v84<=((949 -(414 + 532)) + 11)) or ((4208 -1482)>=3645)) then if (((1529 -(58 + 915))<=(1651 -(248 + 133 + (1478 -(593 + 489))))) and (v84<=(653 -(373 + 268)))) then v81[v83[1731 -(98 + 1631) ]][v83[3]]=v81[v83[553 -(373 + 176) ]];elseif (((5619 -(394 + 486))>(3094 -1598)) and (v84==((1312 -(403 + 906)) + 10))) then v81[v83[4 -2 ]][v83[(5 -2) + 0 ]]=v83[4];else v64=v83[1931 -(932 + 996) ];end elseif ((v84<=(1527 -(984 + 528))) or ((2112 -(52 + 232))>4778)) then if ((v81[v83[5 -3 ]]==v83[16 -12 ]) or ((133 + 19)>(282 + 1476))) then v64=v64 + 1 ;else v64=v83[3 -0 ];end elseif ((v84>(1 + 15)) or ((64 + 180)==3641)) then v81[v83[977 -(162 + 813) ]]=v81[v83[4 -1 ]][v83[928 -(414 + 510) ]];else v81[v83[2]]=v81[v83[12 -9 ]];end elseif ((v84<=(1816 -(171 + 1625))) or ((3891 -(1241 + 734))>=(1466 + 1246))) then if (((2449 + 94)<2912) and (v84<=(5 + 13))) then local v126=1841 -(871 + 970) ;local v127;local v128;while true do if ((v126==(0 -0)) or ((1825 -(807 + 716))==((1766 + 1072) -1302))) then v127=1995 -(694 + 1301) ;v128=nil;v126=483 -(308 + (478 -304)) ;end if ((v126==(1 + 0)) or (3231<=(8856 -6630))) then while true do if ((v127==((240 -105) -(85 + (105 -55)))) or ((3912 + 202)==(5050 -(25 + 510)))) then v128=v83[419 -(352 + 65) ];v81[v128]=v81[v128](v13(v81,v128 + (1 -0) ,v65));break;end end break;end end elseif ((v84>(24 -5)) or (3179==(1434 -(252 + 405 + (807 -530))))) then local v155=0 -0 ;local v156;while true do if ((v155==(0 -0)) or (3560>=(10057 -5107))) then v156=v83[1724 -((2659 -(280 + 816)) + 159) ];v81[v156](v81[v156 + (3 -2) ]);break;end end else local v157=0 + 0 ;local v158;while true do if ((v157==(703 -(448 + 255))) or ((485 + 3113)==(3755 + 95))) then v158=v83[1938 -(722 + 798 + 416) ];v81[v158]=v81[v158]();break;end end end elseif ((v84<=(67 -46)) or (1238>(4672 -1375))) then if ((v83[382 -(342 + 38) ]==v81[v83[1416 -(274 + 1138) ]]) or ((9656 -5499)==(4162 -(649 + 62)))) then v64=v64 + 1 + (1842 -(341 + 1501)) ;else v64=v83[2 + 1 ];end elseif ((((215 + 1903) -(168 + 635))<(3526 -(368 + 83))) and (v84>(886 -(832 + 32)))) then v81[v83[2]]=v43[v83[3]];else local v162=0 -0 ;local v163;local v164;local v165;local v166;while true do if ((v162==1) or (1855==(3094 -(2379 + 49)))) then local v188=(0 -0) + 0 ;while true do if (((2258 -(26 + 436))>=(393 -(819 -(573 + 76)))) and (v188==(730 -(698 + 31)))) then v162=586 -(354 + 230) ;break;end if (((3361 -2611)<=(2498 + 688)) and ((1090 -(925 + 165))==v188)) then v65=(v165 + v163) -(127 -(28 + 98)) ;v166=1732 -(1055 + 478 + 199) ;v188=884 -(18 + 37 + 828) ;end end end if (((569 + 1539)<=(5802 -3260)) and (v162==(0 -0))) then local v189=0 + 0 ;while true do if (((6946 -4292)<=(4080 -(200 + 862))) and ((0 -0)==v189)) then v163=v83[2];v164,v165=v78(v81[v163](v13(v81,v163 + (1 -0) ,v83[1 + 2 + 0 ])));v189=41 -(34 + 6) ;end if ((((670 + 3388) -(113 + 294))>3251) and (v189==(1 + 0))) then v162=1;break;end end end if ((v162==(3 -1)) or ((487 + 899)==4330)) then for v193=v163,v65 do local v194=44 -(31 + 13) ;while true do if (((490 -(116 + 108))==(2218 -((1844 -(252 + 238)) + 598))) and (v194==(1962 -((886 -(148 + 101)) + 1325)))) then v166=v166 + 1 ;v81[v193]=v164[v166];break;end end end break;end end end v64=v64 + (3 -(3 -1)) ;break;end end end end A,B=v28(v11(v68));if  not A[1] then local v88=v41[4][v64] or "?" ;error("Script error at ["   .. v88   .. "]:"   .. A[2] );else return v13(A,2,B);end end;end return v30(v29(),{},v17)(...);end if (v18==3) then function v25()local v47=v24();local v48=v24();local v49=2 -1 ;local v50=(v21(v48,1,55 -35 ) * (((1819 -(793 + 1025)) + 1)^(93 -61))) + v47 ;local v51=v21(v48,101 -80 ,565 -(470 + 64) );local v52=((v21(v48,(46 + 13) -27 )==(4 -3)) and  -(3 -2)) or (1309 -(679 + 629)) ;if (v51==0) then if (v50==(1033 -(753 + 280))) then return v52 * (742 -(66 + 676)) ;else local v89=0 + 0 ;while true do if (v89==0) then v51=(458 -(106 + 351)) + 0 ;v49=513 -(74 + 439) ;break;end end end elseif (v51==(2672 -(88 + 517 + 20))) then return ((v50==(0 + 0)) and (v52 * ((1 + (1776 -(746 + 1030)))/(0 -0)))) or (v52 * NaN) ;end return v8(v52,v51-1023 ) * (v49 + (v50/((1 + 1)^(1251 -(827 + 372))))) ;end v26=nil;function v26(v53)local v54;if  not v53 then v53=v24();if (v53==(656 -(145 + 511))) then return "";end end v54=v3(v16,v19,(v19 + v53) -(1705 -(1056 + 648)) );v19=v19 + v53 ;local v55={};for v69=1 + 0 , #v54 do v55[v69]=v2(v1(v3(v54,v69,v69)));end return v6(v55);end v27=v24;v18=4;end if (v18==4) then v28=nil;function v28(...)return {...},v12("#",...);end v29=nil;function v29()local v56=0 -0 ;local v57;local v58;local v59;local v60;local v61;local v62;while true do local v71=0;while true do if (v71==0) then local v90=0 -0 ;while true do if (v90==0) then if (v56==2) then for v103=1,v61 do local v104=0 + 0 ;local v105;local v106;local v107;while true do if (v104==(1 -0)) then v107=nil;while true do if ((1344 -(119 + 1224))~=v105) then else if (v106==(1 + 0)) then v107=v22()~=(0 + 0) ;elseif (v106==2) then v107=v25();elseif (v106==3) then v107=v26();end v62[v103]=v107;break;end if ((0 -0)~=v105) then else local v168=0;local v169;while true do if (v168~=(0 -0)) then else v169=0 -0 ;while true do if (v169~=(0 + 0)) then else local v207=0;while true do if (v207==0) then local v222=936 -(879 + 57) ;while true do if (v222==(1 + 0)) then v207=93 -(7 + 85) ;break;end if (v222==(0 -0)) then v106=v22();v107=nil;v222=1;end end end if (v207==1) then v169=1;break;end end end if (v169==(1 + 0)) then v105=1 + 0 ;break;end end break;end end end end break;end if (v104==0) then v105=0;v106=nil;v104=2 -1 ;end end end v60[3]=v22();for v108=73 -(51 + 21) ,v24() do local v109=0;local v110;while true do if (v109==0) then v110=v22();if (v21(v110,1 -0 ,1)==0) then local v129=0 -0 ;local v130;local v131;local v132;while true do if (v129~=3) then else if (v21(v131,4 -1 ,294 -(102 + 189) )==(1 + 0)) then v132[1 + 3 ]=v62[v132[556 -(364 + 188) ]];end v57[v108]=v132;break;end if (v129~=1) then else v132={v23(),v23(),nil,nil};if (v130==0) then local v197=0 + 0 ;local v198;local v199;while true do if (v197~=(1343 -(696 + 647))) then else v198=0;v199=nil;v197=1;end if (v197==(1 -0)) then while true do if (v198==(880 -(718 + 162))) then v199=0;while true do if (v199~=(1378 -(48 + 1330))) then else v132[3]=v23();v132[4]=v23();break;end end break;end end break;end end elseif (v130==1) then v132[3]=v24();elseif (v130==(8 -6)) then v132[9 -6 ]=v24() -((4 -2)^16) ;elseif (v130==3) then local v223=573 -(77 + 496) ;local v224;while true do if (v223~=0) then else v224=0;while true do if (v224==0) then v132[3 + 0 ]=v24() -((1 + 1)^(900 -(348 + 536))) ;v132[302 -(164 + 134) ]=v23();break;end end break;end end end v129=2;end if (v129~=2) then else local v177=0;local v178;while true do if (v177~=(0 + 0)) then else v178=0;while true do if (v178~=(1 + 0)) then else v129=3;break;end if (v178==0) then local v218=0;while true do if (v218~=0) then else if (v21(v131,918 -(297 + 620) ,297 -(146 + 150) )==(823 -(211 + 611))) then v132[2]=v62[v132[2]];end if (v21(v131,2,918 -(722 + 194) )~=1) then else v132[3]=v62[v132[3]];end v218=1 -0 ;end if (v218~=(2 -1)) then else v178=1;break;end end end end break;end end end if (v129==0) then v130=v21(v110,2,8 -5 );v131=v21(v110,4,6);v129=1130 -(789 + 340) ;end end end break;end end end v56=3;end if ((276 -(20 + 256))==v56) then local v102=0 -0 ;while true do if (v102~=(1 + 0)) then else v59={};v56=1;break;end if ((1276 -(1007 + 269))~=v102) then else local v111=0;while true do if (v111~=0) then else v57={};v58={};v111=1 + 0 ;end if (v111~=(4 -3)) then else v102=1;break;end end end end end v90=1;end if (v90~=1) then else v71=869 -(345 + 523) ;break;end end end if (v71~=(2 -1)) then else if (v56~=1) then else v60={v57,v58,nil,v59};v61=v24();v62={};v56=2;end if (v56==(1 + 2)) then local v99=0;while true do local v100=0;while true do if (v100==(1017 -(442 + 575))) then if (v99~=(1 + 0)) then else return v60;end if (v99==(0 -0)) then local v112=0;while true do if (1==v112) then v99=1;break;end if (v112~=(0 -0)) then else for v170=1,v24() do v58[v170-(1 + 0) ]=v29();end for v172=1,v24() do v59[v172]=v24();end v112=1;end end end break;end end end end break;end end end end v18=5;end if (v18==0) then v19=1;v20=nil;v16=v4(v3(v16,5),"..",function(v63)if (v1(v63,2)==79) then v20=v0(v3(v63,1,1));return "";else local v85=v2(v0(v63,16));if v20 then local v91=0;local v92;while true do if (v91==0) then v92=v5(v85,v20);v20=nil;v91=1;end if (v91==1) then return v92;end end else return v85;end end end);v21=nil;v18=1;end end end vv9(),...);end
